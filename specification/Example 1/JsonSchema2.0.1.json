{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "90918_4_definitions.json",
  "$comment": "version 3.0.1",  
  "$ref": "#/definitions/ServiceRun",
  "definitions": {
      "DataDelivery": {
        "type": "object",
        "additionalProperties":false,	        
        "properties": {
          "id": {
            "description": "id of the data delivery used for tracking and error reporting",
            "type": "string",
            "format": "uuid",
            "examples": [
              "149c9b31-9b75-43e7-8677-22c8348cdb66"
            ]
          },
          "provider": {
            "$ref": "#/definitions/Company"
          },
          "creationTime": {
            "description": "creation date of the data. New data will replace all older data ",
            "$ref": "#/definitions/DateTime"
          },
          "contributingProviders": {
            "description": "list of contributing providers in case of consolidated data",
            "type": "array",
            "items": 
            {
                "$ref": "#/definitions/Company"
            }
          }
        },
        "required": [
          "id",
          "provider",
          "creationTime"
        ]
      },  	
      "Arrival": {
        "allOf": [
          {
          	"$ref": "#/definitions/ServiceRunEventType"
          },
          {
            "$ref": "#/definitions/TimeTabledServiceRunEvent"
          },
          {
            "type": "object",
            "properties": {
              "carrier": {
                "$ref": "#/definitions/Company"
              },
              "stopId": {
                "description": "uniqueId of the stop to distinguish multiple stops at the same station",
                "type": "string",
                "examples": [
                  "2f31d510-5944-4280-a90b-32ec0ba86965"
                ]
              },
              "significance": {
                "$ref": "#/definitions/Significance"
              },
              "alighting": {
                "description": "indicator for restricted alighting. true = alighting allowed",
                "type": "boolean",
                "default": true
              },
              "vehicleGroups": {
                "description": "groups of vehicles. Multiple groups can be used to describe connected service parts with separate service names.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleGroup"
                }
              },
              "platform": {
                "type": "string",
                "examples": [
                  "13B"
                ]
              },
              "track": {
                "type": "string",
                "examples": [
                  "13B"
                ]
              },
              "connections": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Connection"
                }
              }
            },
            "required": [
              "carrier",
              "significance"
            ]
          }
        ]
      },
      "CancellationType": {
        "description": "details on the cause of cancellation. Either cancelled by  the Carrier by sending the cancel information (CANCELLED_BY_CARRIER) or cancelled as the Carrier did not  send the stop compared to the reference time table (MISSING_FROM_CARRIER) or the service is not any more included  in a new time table update (MISSING_FROM_TIMETABLE) .",
        "type": "string",
        "x-extensible-enum": [
          "MISSING_FROM_CARRIER",
          "CANCELLED_BY_CARRIER",
          "MISSING_FROM_TIMETABLE"
        ]
      },
      "DelayStatus": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "CANCELLED",
          "DELAYED",
          "ON_SCHEDULE"
        ]
      },
      "ConnectionStatus": {
        "type": "string",
        "enum": [
          "LOST",
          "KEPT",
          "AT_RISK"
        ]
      },
      "Connection": {
        "type": "object",
        "additionalProperties":false,	        
        "properties": {
          "serviceRunRef": {
            "$ref": "#/definitions/ServiceRunReference"
          },
          "status": {
            "$ref": "#/definitions/ConnectionStatus"
          }
        },
        "required": [
          "serviceRunRef",
          "status"
        ]
      },
      "Company": {
        "description": "company code. TAP-TSI code in case of rail. Code list to be qualified by urn.",
        "type": "string",
        "examples": [
          "urn:uic:rics:2480",
          "urn:uic:rics:1184",
          "urn:uic:rics:0084"
        ]
      },
      "Country": {
        "description": "ISO 3166 2A country code.",
        "type": "string",
        "pattern": "^[A-Z]{2}$",
        "examples": [
          "DE",
          "NL"
        ]
      },
      "CountryBorderCrossing": {
        "description": "crossing between two countries",
        "type": "array",
        "minItems": 2,
        "maxItems": 2,
        "items": {
          "$ref": "#/definitions/Country"
        }
      },
      
      "CountryBorderCrossings": {
        "type": "array",
        "description": "List of country code pairs for border crossings.",
        "items": {
          "$ref": "#/definitions/CountryBorderCrossing"
        }
      },
      
      "DateTime": {
        "description": "UTC date in format YYYY-MM-DDThh:mm:ss.sTZD. TZD must be given as offset (eg. 1997-07-16T19:20:30.45+01:00)",
        "type": "string",
        "format": "date-time",
        "examples": [
          "2023-07-16T19:20:30.45+01:00"
        ]
      },
      "DelayReason": {
        "description": "reason code for delays TAF codes of uic codes",
        "type": "string",
        "examples": [
          "urn:x-taf:25",
          "WAITING_FOR_DELAYED_PASSENGERS"
        ]
      },
      "Departure": {
        "allOf": [
          {
          	"$ref": "#/definitions/ServiceRunEventType"
          },
          {
            "$ref": "#/definitions/TimeTabledServiceRunEvent"
          },
          {
            "type": "object",           
            "properties": {
              "carrier": {
                "$ref": "#/definitions/Company"
              },
              "significance": {
                "$ref": "#/definitions/Significance"
              },
              "stopId": {
                "description": "uniqueId of the stop to distinguish multiple stops at the same station",
                "type": "string",
                "examples": [
                  "2f31d510-5944-4280-a90b-32ec0ba86965"
                ]
              },
              "boarding": {
                "description": "indicator for restricted boarding",
                "type": "boolean",
                "default": true
              },
              "occupancy": {
                "type": "string",
                "x-extensible-enum":
                  ["EMPTY","MANY_SEATS_AVAILABLE",
                  "FEW_SEATS_AVAILABLE",
                  "STANDING_ROOM_ONLY",
                  "NOT_ACCEPTING_PASSENGERS"]
              },
              "congestion": {
                "description": "e.g. stuck in traffic jam, no delay estimation available",
                "type": "boolean",
                "default": true
              },
              "platform": {
                "type": "string",
                "examples": [
                  "13B"
                ]
              },
              "track": {
                "type": "string",
                "examples": [
                  "13B"
                ]
              },
              "vehicleGroups": {
                "description": "groups of vehicles. Multiple groups can be used to describe connected service parts with separate service names.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleGroup"
                }
              }
            },
            "required": [
              "carrier",
              "significance"
            ]
          }
        ]
      },
      "ErrorDescription": {
        "description": "error description for an error that occurred in a queue",
        "type": "object",
        "additionalProperties":false,	        
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SCHEMA_VIOLATION",
              "OTHER"
            ],
            "exmples": [
              "SCHEMA_VIOLATION"
            ]
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "severity": {
            "type": "string",
            "enum": [
              "ERROR",
              "WARNING",
              "INFO"
            ],
            "examples": [
              "ERROR"
            ]
          },
          "dataPayload": {
            "description": "base64 encoded data payload that caused the error",
            "type": "string",
            "contentEncoding": "base64",
            "examples": [
              "dGhpc19pc19hX3BheWxvYWQ="
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              "Format error at position 133 of the message"
            ]
          },
          "correlationId": {
            "description": "correlation id of the data delivery that caused the error",
            "type": "string",
            "examples": [
              "ed4ddf24-7b60-42c9-a10b-fb8c35cd8b44"
            ]
          }
        },
        "required": [
          "type",
          "time",
          "severity"
        ]
      },
      "ServiceRunEventType": {
      	"type":"object",
        "description": "discriminator for inheritance between data types",
        "properties":{
        	"objectType": {
        		"type": "string",
				"x-extensible-enum": [
				  "ARRIVAL",
				  "DEPARTURE",
				  "PASS_THROUGH",
				  "GEO_TRACKING"
			]
        	}
        }

      },
      "Filter": {
        "type": "object",
        "additionalProperties":false,	
        "properties": {
          "carriers": {
            "description": "carriers to filter",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Company"
            },
            "examples": [
              "[1080],[1087]"
            ]
          },
          "carrierFilterType": {
            "type": "string",
            "x-extensible-enum": [
              {
                "INCLUDE": "selects services where ANY of the specified carriers serve any part of the service."
              },
              {
                "EXCLUSIVE": "selects services where ANY of the specified carriers serve all parts of the service. In this case, services run by multiple carriers are not included in the selection."
              },
              {
                "EXCLUDE": "selects services where NONE of the specified companies are the carrier for any part of the service."
              }
            ]
          },
          "countries": {
            "description": "countries to be filtered",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Country"
            }
          },
          "countryFilterType": {
            "type": "string",
            "x-extensible-enum": [
              {
                "INCLUDE": "select services where ANY of these countries is part of the route of the service. In this case, international services running at least partly in any of those countries are included in the selection."
              },
              {
                "EXCLUSIVE": "select services where the route of the service is run completely inside ANY of these countries. In this case, international services across the provided countries are not included in the selection."
              },
              {
                "EXCLUDE": "select services where NONE of the specified countries are any part of the service."
              }
            ]
          },
          "countryBorderCrossings": {
            "description": "applies in case the service is crossing the border between the specified countries in one of the border crossings",
            "$ref": "#/definitions/CountryBorderCrossings"
          },
          "multiCarrierServicesOnly": {
            "description": "data will be provided for multi carrier services only",
            "type": "boolean",
            "default": false
          },
          "countryCrossBorderOnly": {
            "description": "data will be provided for services crossing country borders only",
            "type": "boolean",
            "default": false
          }
        }
      },
      "GeoTracking": {
        "allOf": [
          {
          	"$ref": "#/definitions/ServiceRunEventType"
          },
          {
            "type": "object",
            "description": "Geo-Tracking-Event on a service run. Documents the position of a service (or vehicle group of a service) at a time.",
            "properties": {
              "time": {
                "description": "time when the service was at the provided position",
                "type": "string",
                "format": "date-time",
                "examples": [
                  "2024-07-14T19:43:37+01:00"
                ]
              },
              "position": {
                "$ref": "#/definitions/GeoPosition"
              },
              "carrier": {
                "$ref": "#/definitions/Company"
              },
              "vehicleGroupRefs": {
                "description": "groups of vehicles where this geo-position applies",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleGroupRef"
                }
              }
            },
            "required": [
              "time",
              "position"
            ]
          }
        ]
      },
      "GeoPosition": {
        "type": "object",
        "additionalProperties": false,
        "description": "WGS84 coordinates position. Provided by OJP.",
        "required": [
          "longitude",
          "latitude"
        ],
        "properties": {
          "longitude": {
            "$ref": "#/definitions/Longitude"
          },
          "latitude": {
            "$ref": "#/definitions/Latitude"
          }
        }
      },
      "Latitude": {
        "type": "number",
        "format": "double",
        "description": "Latitude from equator. -90 (South) to +90 (North). Decimal degrees. e.g. 56.356.",
        "minimum": -90,
        "maximum": 90,
        "examples": [
          47.37818
        ]
      },
      "Location": {
        "description": "location code: either merits code or from another code list formatted as urn",
        "type": "object",
        "additionalProperties":false,	
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "8012345",
              "urn:uic:stn:8512345",
              "urn:NL:nationalLocations:8512345"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Amsterdam Centraal",
              "K�ln Hbf"
            ]
          },
          "country": {
            "$ref": "#/definitions/Country"
          }
        },
        "required": [
          "code"
        ]
      },
      "Longitude": {
        "type": "number",
        "format": "double",
        "description": "Longitude from Greenwich Meridian. -180 (West) to +180 (East). Decimal degrees. eg 2.356.",
        "minimum": -180,
        "maximum": 180,
        "examples": [
          8.54021
        ]
      },
      "PassThrough": {
        "allOf": [
          {
          	"$ref": "#/definitions/ServiceRunEventType"
          },
          {
            "$ref": "#/definitions/TimeTabledServiceRunEvent"
          },
          {
            "type": "object",
            "properties": {
              "significance": {
                "$ref": "#/definitions/Significance"
              },
              "type": {
                "type": "string",
                "x-extensible-enum":
                    ["STATION","IM_HAND_OVER","IM_POINT"],
                "examples": [
                  "STATION"
                ]
              },
              "carrier": {
                "$ref": "#/definitions/Company"
              },
              "fromIM": {
                "$ref": "#/definitions/Company"
              },
              "toIM": {
                "description": "handover from this infratstucture manager",
                "$ref": "#/definitions/Company"
              }
            },
            "required": [
              "location",
              "type"
            ]
          }
        ]
      },
      "ServiceRunIds": {
        "description": "list of service run ids",
        "type":"object",
        "additionalProperties":false,	
        "properties": {
          "serviceRunIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minitems": 1,
            "maxitems": 100
          }
        },
        "required": [
          "ServiceRunIds"
        ]
      },
      "ServiceRunUpdate": {
        "description": "information on an event that has created or altered a service",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "3fd02c20-c53a-4eee-80b4-0fbb8de3ae98"
            ]
          },
          "serviceRunNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceRunNotification"
            },
            "minitems": 1,
            "maxitems": 100
          },
          "timestamp": {
            "$ref": "#/definitions/DateTime"
          }
        },
        "required": [
          "id",
          "serviceRunNotifications",
          "timestamp"
        ]
      },
      "ServiceRunNotification": {
        "description": "Notification on a service run change",
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "enum": [
              "NEW",
              "MODIFY",
              "DELETE"
            ],
            "examples": [
              "MODIFY"
            ]
          },
          "changeIndications": {
            "description": "list of change indicators compared to the previous notification",
            "type": "array",
            "items": {
              "type": "string",
              "format": "x-extensible-enum - DELAY_CHANGE - STOP_CANCELLED - STOP_ADDED - NEW_GEO_TRACKING - PLATFORM_CHANGE - CONNECTION_CHANGE"
            }
          },
          "serviceRunId": {
            "description": "id of the service run changed",
            "type": "string",
            "format": "uuid",
            "examples": [
              "3fd02c20-c53a-4eee-80b4-0fbb8de3ae97"
            ]
          },
          "dataDeliveryId": {
            "description": "data delivery id that caused the change",
            "type": "string",
            "format": "uuid"
          },
          "dataDeliveryProvider": {
            "description": "data provider that caused the change",
            "$ref": "#/definitions/Company"
          }
        },
        "required": [
          "eventType",
          "serviceRunId"
        ]
      },
      "ServiceRuns": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ServiceRun"
        },
        "minitems": 1,
        "maxitems": 100
      },
      "ServiceRunSearchParams": {
        "type": "object",
        "properties": {
          "serviceName": {
            "description": "commercial servide number (in case of trains the train number) used for communication with the customer. Eigther service or line number must be provided. Corresponds to servide number in MERITS.",
            "type": "string",
            "examples": [
              "4711",
              "B200"
            ]
          },
          "lineName": {
            "type": "string",
            "examples": [
              "11",
              "Circle Line"
            ]
          },
          "fromPlannedStartDate": {
            "description": "minimum (inclusive) planned travel date in local time",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:37+01:00"
            ]
          },
          "toPlannedStartDate": {
            "description": "maximum (exclusive) planned travel date in local time",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:37+01:00"
            ]
          },
          "country": {
            "description": "a country where the serice must run",
            "$ref": "#/definitions/Country"
          },
          "carrier": {
            "description": "a carrier involved in the service",
            "$ref": "#/definitions/Company"
          }
        }
      },
      "ServiceRun": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dataDelivery": {
            "description": "main service refence for this service run. The service reference might  change along the route, the changed service refences are then included in the departiure event for the next part of the route",
            "$ref": "#/definitions/DataDelivery"
          },
          "serviceRunRef": {
            "$ref": "#/definitions/ServiceRunReference"
          },
          "replacedServiceRuns": {
            "description": "list of services replaced by this service",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceRunReference"
            }
          },
          "replacingServiceRuns": {
            "description": "list of services replacing this service",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceRunReference"
            }
          },
          "timeTableReference": {
            "description": "reference to a time table",
            "$ref": "#/definitions/TimeTableReference"
          },
          "events": {
            "description": "list of events along the service run ordered by time",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceRunEvent"
            }
          },
          "cancelled": {
            "description": "default false",
            "type": "boolean",
            "default": false
          },
          "cancellationType": {
            "$ref": "#/definitions/CancellationType"
          },
          "facilities": {
            "description": "facilities available on the whole routes of the service run. Additional facilities on specific sections are part of the VehicleStop object of the departure of the section",
            "type": "array",
            "items": {
              "description": "OSDM code list",
              "type": "string"
            }
          }
        },
        "required": [
          "dataDelivery",
          "serviceRunRef",
          "events"
        ]
      },
      "ServiceRunReference": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceRunId": {
            "description": "unique id of the service run in the real time platform",
            "type": "string",
            "examples": [
              "5179f99c-f52d-4b51-a3a7-daa71b69bbe2"
            ]
          },
          "serviceName": {
            "description": "commercial servide name (in case of trains the train number) used for communication with the customer. Eigther service or line number must be provided",
            "type": "string",
            "examples": [
              "4711"
            ]
          },
          "lineName": {
            "type": "string",
            "examples": [
              "11"
            ]
          },
          "lineServiceRunId": {
            "description": "internal service number in case only the line number is used in customer communication",
            "type": "string",
            "examples": [
              "1234511"
            ]
          },
          "serviceBrands": {
            "description": "service brands in case the service is maketed under different brands",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceBrand"
            }
          },
          "timeTableReferences": {
            "description": "references of this service to a technical service id used in a time table",
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeTableserviceRunId"
            }
          },
          "providerServiceRunIds": {
            "description": "service ids of the data providers for this service",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "$ref": "#/definitions/Company"
                },
                "serviceRunId": {
                  "type": "string"
                }
              },
              "required": [
                "provider",
                "serviceRunId"
              ]
            }
          }
        },
        "required": [
          "serviceRunId",
          "serviceName"
        ]
      },
      "ServiceBrand": {
        "description": "service brand code of urn providing a code from another code list.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "51",
              "urn:uic:sbc:51"
            ]
          },
          "abbreviation": {
            "type": "string",
            "examples": [
              "ICE"
            ]
          }
        }
      },
      "Significance": {
        "description": "indication whether the provider is responsible for these data or whether he has forwarded these data for convenience only. In the later case the platform might replace these with data from the carier when available.",
        "type": "string",
        "enum": [
          "FORWARDED",
          "MASTER"
        ]
      },
      "StopStatus": {
        "type": "string",
        "x-extensible-enum":
          ["PLANNED","ON_REQUEST","REQUESTED"],
        "default": "ON_REQUEST"
      },
      "SubscriptionInfos": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SubscriptionInfo"
        }
      },
      "SubscriptionInfo": {
        "description": "the subscription without the access token.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "e28de695-9a31-465f-9247-625b5a4fec74"
            ]
          },
          "company": {
            "$ref": "#/definitions/Company"
          },
          "hook": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://www.exampleCompany.com:8042/notifications"
            ]
          },
          "user": {
            "type": "string",
            "examples": [
              "UicRealTimePlatform"
            ]
          },
          "acceptedDelayTime": {
            "description": "accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.",
            "type": "integer",
            "format": "int32"
          },
          "filters": {
            "description": "listed filters apply separately (OR)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "required": [
          "id",
          "company",
          "hook",
          "user"
        ]
      },
      "SubscriptionPost": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/definitions/Company"
          },
          "hook": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://www.exampleCompany.com:8042/notifications"
            ]
          },
          "user": {
            "type": "string",
            "examples": [
              "UicRealTimePlatform"
            ]
          },
          "accessToken": {
            "type": "string",
            "examples": [
              "dGhpc19pc19hbl9hY2Nlc3NfdG9rZW4="
            ]
          },
          "acceptedDelayTime": {
            "description": "accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.",
            "type": "integer",
            "format": "int32"
          },
          "filters": {
            "description": "listed filters apply separately (OR)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "required": [
          "id",
          "company",
          "hook",
          "user",
          "accessToken"
        ]
      },
      "SubscriptionPatch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hook": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://www.exampleCompany.com:8042/notifications"
            ]
          },
          "user": {
            "type": "string",
            "examples": [
              "UicRealTimePlatform"
            ]
          },
          "accessToken": {
            "type": "string",
            "examples": [
              "dGhpc19pc19hbl9hY2Nlc3NfdG9rZW4="
            ]
          },
          "acceptedDelayTime": {
            "description": "accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.",
            "type": "integer",
            "format": "int32"
          },
          "filters": {
            "description": "listed filters apply separately (OR)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "Subscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "e28de695-9a31-465f-9247-625b5a4fec74"
            ]
          },
          "company": {
            "$ref": "#/definitions/Company"
          },
          "hook": {
            "type": "string",
            "format": "uri",
            "examples": [
              "https://www.exampleCompany.com:8042/notifications"
            ]
          },
          "user": {
            "type": "string",
            "examples": [
              "UicRealTimePlatform"
            ]
          },
          "accessToken": {
            "type": "string",
            "examples": [
              "dGhpc19pc19hbl9hY2Nlc3NfdG9rZW4="
            ]
          },
          "acceptedDelayTime": {
            "description": "accepted ealy in seconds to allow Notifications on a collection of servides to reduce the number of messages.",
            "type": "integer",
            "format": "int32"
          },
          "filters": {
            "description": "listed filters apply separately (OR)",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Filter"
            }
          }
        },
        "required": [
          "id",
          "company",
          "hook",
          "user",
          "accessToken"
        ]
      },
      "ServiceRunEvent": {
        "description": "Event on a service run. This could either be a departure, arrival, a pass through or a geo-tracking.",
		"anyOf": [
					{
					  "$ref": "#/definitions/Arrival"
					},
					{
					  "$ref": "#/definitions/Departure"
					},
					{
					  "$ref": "#/definitions/PassThrough"
					},
					{
					  "$ref": "#/definitions/GeoTracking"
					}
		],
		"discriminator": {
			"propertyName": "objectType",
			"mapping": [
			  {"ARRIVAL": "Arrival"},
			  {"DEPARTURE": "Departure"},
			  {"PASS_THROUGH": "PassThrough"},
			  {"GEO_TRACKING": "GeoTracking"}
			]
		}
      },
      "TimeTabledServiceRunEvent": {
        "type": "object",
        "description": "Event on a service run. This could eigther be a departure, arrival or a pass through.",
        "properties": {
          "location": {
            "$ref": "#/definitions/Location"
          },
          "plannedTime": {
            "description": "planned time according to the data provider of the event",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:37+01:00"
            ]
          },
          "timeTabledTime": {
            "description": "planned time according to the referenced time table",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:37+01:00"
            ]
          },
          "consolidatedEstimatedTime": {
            "description": "estimation consolidated by the exchange platform to be consistent across multiple involved carriers",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:37+01:00"
            ]
          },
          "estimatedTime": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:47+01:00"
            ]
          },
          "actualTime": {
            "description": "Time when the arrival actually occured. Provided after arrival only.",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-07-14T19:43:46+01:00"
            ]
          },
          "status": {
            "$ref": "#/definitions/DelayStatus"
          },
          "stopStatus": {
            "$ref": "#/definitions/StopStatus"
          },
          "cancelled": {
            "description": "default false",
            "type": "boolean",
            "default": false
          },
          "cancellationType": {
            "$ref": "#/definitions/CancellationType"
          },
          "reasonForDelay": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DelayReason"
            },
            "lastModified": {
              "description": "last modification time stamp of the event",
              "type": "string",
              "format": "date-time",
              "examples": [
                "2024-07-14T19:43:47+01:00"
              ]
            }
          }
        },
        "required": [
          "location",
          "plannedTime"
        ]
      },
      "TimeTableReference": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timeTable": {
            "description": "name of thetime table",
            "type": "string",
            "x-extensible-enum":
              ["UIC_MERITS"],
            "examples": [
              "UIC_MERITS"
            ]
          },
          "version": {
            "description": "referenced version of the time table. In case of MERITS the date of delivery used in the file name.",
            "type": "string",
            "examples": [
              "2024-07-14"
            ]
          }
        },
        "required": [
          "timeTable",
          "version"
        ]
      },
      "TimeTableserviceRunId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timeTable": {
            "$ref": "#/definitions/TimeTableReference"
          },
          "id": {
            "type": "string",
            "examples": [
              "43b65be1-dce9-42a3-b4df-9b8153129eae"
            ]
          }
        },
        "required": [
          "id"
        ]
      },
      "VehicleGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "id of the vehicle group at least unique within the service run accross muptiple arrivals and departures",
            "type": "string"
          },
          "serviceRunRef": {
            "description": "service number for the vehicle group. This might be different from the main service number",
            "$ref": "#/definitions/ServiceRunReference"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/VehicleStop"
            }
          }
        }
      },
      "VehicleGroupRef": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "id of the vehicle group at least unique within the service run accross muptiple arrivals and departures",
            "type": "string"
          },
          "serviceRunRef": {
            "description": "service number for the vehicle group. This might be different from the main service number",
            "$ref": "#/definitions/ServiceRunReference"
          },
          "vehicleRefs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/VehicleRef"
            }
          }
        }
      },
      "VehicleRef": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vehicleNumber"
        ],
        "properties": {
          "vehicleId": {
            "description": "UIC vehicle id or  another code defined as urn",
            "type": "string",
            "examples": [
              "31816650286",
              "urn:uic:veh:31816650286"
            ]
          },
          "vehicleNumber": {
            "description": "vehicle number used for customer commmunication in bookings and on platforms. Note: not all verhicles might have a number (e.g. luggage coaches, locomotives)",
            "type": "string",
            "examples": [
              "12"
            ]
          }
        }
      },
      "VehicleStop": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "vehicleRef"
        ],
        "properties": {
          "vehicleRef": {
            "$ref": "#/definitions/VehicleRef"
          },
          "facilities": {
            "description": "additional facilities available in the vehicle for the next section",
            "type": "array",
            "items": {
              "description": "OSDM code list",
              "type": "string"
            }
          },
          "serviceClasses": {
            "type": "array",
            "items": {
              "description": "OSDM code list",
              "type": "string"
            }
          },
          "platform": {
            "type": "string"
          },
          "platformSection": {
            "type": "string",
            "examples": [
              "C"
            ]
          },
          "track": {
            "type": "string",
            "examples": [
              "13"
            ]
          },
          "trackSection": {
            "type": "string",
            "examples": [
              "C"
            ]
          },
          "vehicleStatus": {
            "description": "option to mark a coach as closed or missing",
            "type": "string",
            "x-extensible-enum": [
              "USABLE",
              "MISSING",
              "CLOSED"
            ],
            "default": "USABLE"
          }
        }
      }
  }
}
